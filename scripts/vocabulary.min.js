function toggleCheckboxes(){$("input:checkbox").not(":checked").length>0?$("input:checkbox").prop("checked",!0):$("input:checkbox").prop("checked",!1)}function processFilters(){let e=[];$("input:checked").each(function(){var t=$(this).attr("value");e.push(t)});let t=e.join("|");$("#vocabTable").DataTable().column(1).search(t,!0,!1).draw()}async function populatePage(e){$("#spinner").show();let t=await getUserData(e),a=t.level,n=await getVocabData(e,a);n.sort(compare),n.forEach(e=>{let t=`\n                  <tr>\n                    <td scope="col">${e.level}</td>\n                    <td scope="col">${e.partsOfSpeech.join(",")}</td>\n                    <td scope="col">${e.characters}</td>\n                    <td scope="col">${e.reading}</td>\n                    <td scope="col">${e.meaning}</td>\n                    <td scope="col">${getEndColumnHtml(e)}</td>\n                  </tr>\n                `;$("#tableBody").append(t)}),$("#vocabTable").DataTable(),$("#spinner").hide()}function getEndColumnHtml(e){let t=`<a href="https://www.wanikani.com/vocabulary/${e.characters}" target="_blank">WaniKani</a>`;const a=e.partsOfSpeech.some(e=>e.indexOf(" verb")>0);return a&&(t+=`<br/><a href="https://cooljugator.com/ja/${e.characters}" target="_blank">Cooljugator</a>`),t}async function getUserData(e){let t="WaniKaniUserData",a=new Headers({"Wanikani-Revision":"20170710",Authorization:"Bearer "+e});if(sessionStorage.getItem(t))return Promise.resolve(JSON.parse(sessionStorage.getItem(t)));{let e=new Request("https://api.wanikani.com/v2/user",{method:"GET",headers:a});return fetch(e).then(e=>e.json()).then(e=>(sessionStorage.setItem(t,JSON.stringify(e.data)),e.data))}}function getApiToken(){let e="WaniKaniUserToken";return localStorage.getItem(e)}async function getVocabData(e,t){let a=getLevels(t),n="subjects?types=vocabulary&levels="+a,o=!0,r=[],c=new Headers({"Wanikani-Revision":"20170710",Authorization:"Bearer "+e}),s="https://api.wanikani.com/v2/"+n;for(;o;){let e=new Request(s,{method:"GET",headers:c}),t=await fetch(e).then(e=>e.json()).then(e=>e);t.data.forEach(e=>{var t={};let a=e.data.parts_of_speech;t.level=e.data.level,t.meaning=e.data.meanings[0].meaning,t.reading=e.data.readings[0].reading,t.characters=e.data.characters,t.partsOfSpeech=a,r.push(t)}),t.pages.next_url?s=t.pages.next_url:o=!1}return Promise.resolve(r)}function getLevels(e){for(var t=[],a=1;a<=e;a++)t.push(a);return t.join(",")}function compare(e,t){const a=e.level,n=t.level;let o=0;return a>n?o=1:a<n&&(o=-1),o}$(function(){let e=getApiToken();null==e&&(window.location.href="enter-token.html?returnUrl=vocabulary.html"),$("#spinner").hide(),populatePage(e)});